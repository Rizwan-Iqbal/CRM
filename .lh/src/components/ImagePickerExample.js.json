{
    "sourceFile": "src/components/ImagePickerExample.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1665754917267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1665754932435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n         setImage(result.uri);\r\n     }\r\n };\r\n \r\n-const SupportScreen = () => {\r\n+const ImagePickerExample = () => {\r\n     const [image, setImage] = useState(null);\r\n     return (\r\n         <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n             <Button title=\"Pick an image from camera roll\" onPress={pickImage} />\r\n@@ -28,5 +28,5 @@\n         </View>\r\n     );\r\n }\r\n \r\n-export default SupportScreen\n\\ No newline at end of file\n+export default ImagePickerExample\n\\ No newline at end of file\n"
                },
                {
                    "date": 1665754996072,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n const pickImage = async () => {\r\n     // No permissions request is necessary for launching the image library\r\n     let result = await ImagePicker.launchImageLibraryAsync({\r\n         mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n-        allowsEditing: true,\r\n+        // allowsEditing: true,\r\n         aspect: [4, 3],\r\n         quality: 1,\r\n         allowsMultipleSelection: 'true'\r\n     });\r\n"
                },
                {
                    "date": 1665755025297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,12 +5,12 @@\n const pickImage = async () => {\r\n     // No permissions request is necessary for launching the image library\r\n     let result = await ImagePicker.launchImageLibraryAsync({\r\n         mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n-        // allowsEditing: true,\r\n+        allowsEditing: true,\r\n         aspect: [4, 3],\r\n         quality: 1,\r\n-        allowsMultipleSelection: 'true'\r\n+        // allowsMultipleSelection: 'true'\r\n     });\r\n \r\n     console.log(result);\r\n \r\n"
                },
                {
                    "date": 1665755071339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,12 +5,12 @@\n const pickImage = async () => {\r\n     // No permissions request is necessary for launching the image library\r\n     let result = await ImagePicker.launchImageLibraryAsync({\r\n         mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n-        allowsEditing: true,\r\n+        // allowsEditing: true,\r\n         aspect: [4, 3],\r\n         quality: 1,\r\n-        // allowsMultipleSelection: 'true'\r\n+        allowsMultipleSelection: 'true'\r\n     });\r\n \r\n     console.log(result);\r\n \r\n"
                }
            ],
            "date": 1665754917267,
            "name": "Commit-0",
            "content": "import React, { useState, useEffect } from 'react';\r\nimport { Button, Image, View, Platform } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\n\r\nconst pickImage = async () => {\r\n    // No permissions request is necessary for launching the image library\r\n    let result = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n        allowsEditing: true,\r\n        aspect: [4, 3],\r\n        quality: 1,\r\n        allowsMultipleSelection: 'true'\r\n    });\r\n\r\n    console.log(result);\r\n\r\n    if (!result.cancelled) {\r\n        setImage(result.uri);\r\n    }\r\n};\r\n\r\nconst SupportScreen = () => {\r\n    const [image, setImage] = useState(null);\r\n    return (\r\n        <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\r\n            <Button title=\"Pick an image from camera roll\" onPress={pickImage} />\r\n            {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}\r\n        </View>\r\n    );\r\n}\r\n\r\nexport default SupportScreen"
        }
    ]
}